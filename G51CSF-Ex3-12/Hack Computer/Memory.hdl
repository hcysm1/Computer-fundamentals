

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
   //Coding for Memory
   //for memory we use 4 RAM8K so we will use Dmux4way having 4 outputs
   //address is from 13 to 14 because selection starts from most significant bit
   //and only 2 because 2^2=4.
   //it will take all the load from Ram16k,screen and keyboard.
   DMux4Way (in=load , sel=address[13..14] , a=loadram1 , b=loadram2 , c=loadscreen , d=loadkeyboard );
   
   //we need RAM16k then RAM8k for screen and then keyboard so we will combine two RAM8k to get Ram16k using or gate
   
   Or (a=loadram1 , b=loadram2 , out=loadram);
   
   //As 1KB=1024B ..8k=8x1024=8192..so for 8k we will use 13 bits of address because 2^13=8192 and why from [0..12]? 
   //because selection starts from least significant bit.
   //but for 16k..16x1024=16384 and 2^14=16384 so we will use 14 bits of address means [0..13]
   //because selection starts from least significant bit
   RAM16K (in=in , load=loadram , address=address[0..13] , out=ramout);
   
   //for screen there is only one input for load signal we will just load the screen and give the address location from [0..12]
   //as it is occupying 8K of ram and already mentioned above y 13 bits.
   //output will go to the physical screen.
   Screen (in=in , load=loadscreen , address=address[0..12] , out=screenout);
   
   //there is no input pin for keyboard because the input is coming from the physical keyboard when we press any key from keyboard
   //and the output is the scan code of the pressed key or 0 if no key is pressed.
   Keyboard (out=keyboardout);
   
   //we are using mux4Way16 because 16 bits and there are 4 outputs .. and the address will be from [13..14] 
   //because we choose address from the most significant bits and only two because 2^2= 4 ways.
   Mux4Way16 (a=ramout , b=ramout , c=screenout , d=keyboardout , sel=address[13..14] , out=out);
   

}
