

CHIP RAM512 {
    IN in[16], load, address[9]; //9 because 2^9=512 so 9 selectors
    OUT out[16];

    PARTS:
    // Put your code here:
	//addresses start from least significant bit as it is Ram64 so 2^6=64 so 6 loactions from least significant bit that is [0..5]
	//using 8 RAM64 to built one RAM512
	
	DMux8Way (in=load ,a=load1 , b=load2 , c=load3 , d=load4 , e=load5 , f=load6 , g=load7 , h=load8 , sel=address[6..8]);
	RAM64 (in=in ,address=address[0..5], load=load1 , out=out1);
	RAM64 (in=in ,address=address[0..5], load=load2 , out=out2);
	RAM64 (in=in ,address=address[0..5], load=load3 , out=out3);
	RAM64 (in=in ,address=address[0..5], load=load4 , out=out4);
	RAM64 (in=in ,address=address[0..5], load=load5 , out=out5);
	RAM64 (in=in ,address=address[0..5], load=load6 , out=out6);
	RAM64 (in=in ,address=address[0..5], load=load7 , out=out7);
	RAM64 (in=in ,address=address[0..5], load=load8 , out=out8);
	Mux8Way16 (a=out1 , b=out2 , c=out3 , d=out4 , e=out5 , f=out6 , g=out7 , h=out8 ,sel=address[6..8] , out=out);  //selection start from
	                                                                                                               // the most significant
																												   //bit so as it is 8way 
																												   //2^3=8 we will use 3 from
																												   //most significant bits that 
																												   //is [6..8]
	
}